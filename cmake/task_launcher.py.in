# This is an auto-generated file, do not edit
# If at any time the paths in this file become invalid,
# try to rebuild the project.

# This file launches and stops training exe at given length of period

import sys
import json
import subprocess

evogen_exe_path = r"@EVOGEN_EXE_PATH@/Evolutionary_Generator.exe"
job_file_path = r"@JOB_FILE_DIR@/"

job_file = sys.argv[1]
if job_file[-5:] != '.json':
    job_file = job_file + '.json'

period = 30 # default period is 30 mins
# prioritize command line input over job file
if len(sys.argv) > 2:
    period = int(sys.argv[2])
else:
    job_file_tmp = job_file_path + job_file
    fileobj = open(job_file_tmp)
    jsobj = json.load(fileobj)
    if 'session_time' in jsobj:
        period = jsobj['session_time']

print("EvoGen Python Trainer")
print("Training with peroid of " + str(period) + " minutes\n\n")

num_class = 0
while True:
    print("================= Class " + str(num_class) + " =================")
    print("Class time: " + str(period) + " mins\n")
    try:
        ret = subprocess.run([evogen_exe_path, 'job', job_file],
                             timeout = period * 60, # timeout is in seconds
                             stderr = subprocess.STDOUT)

        # if subprocess finished, all jobs has been done
        if ret.returncode == 0:
            print("All jobs has finished, return from task_launcher")
            exit()
    except subprocess.TimeoutExpired:
        print("\nClass " + str(num_class) + " time's up")
    except:
        print("\nUnexcepted error")
    print("\n\n--------------------------------------------")
    print("Class " + str(num_class) + " finished\n\n")
    num_class = num_class + 1
